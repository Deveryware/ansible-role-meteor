---
- name: Ensure meteor group is created.
  group:
    name: "{{ meteor_group }}"

- name: Ensure meteor user is created
  user:
    name: "{{ meteor_user }}"
    group: "{{ meteor_group }}"
    home: "{{ meteor_home }}"
    shell: /bin/sh

- name: Ensure meteor home exists
  file:
    path: "{{ meteor_home }}"
    state: directory
    owner: "{{ meteor_user }}"
    group: "{{ meteor_group }}"

- name: Check if Meteor is already installed
  stat:
    path: "{{ meteor_home }}/.meteor/meteor"
  register: __meteor_stat

- name: Check currently installed version if needed
  set_fact:
    __meteor_current_version: "{{ __meteor_stat.stat.lnk_target.split('/')[2] }}"
  when: __meteor_stat.stat.exists

- name: Adjust Meteor release
  set_fact:
    __meteor_adjusted_release: "{{ __meteor_release | meteor_version }}"

- name: Install a new release
  block:
  - name: Create Meteor temp dir
    file:
      path: "{{ meteor_install_tmpdir }}"
      state: directory 
      owner: "{{ meteor_user }}"
      group: "{{ meteor_group }}"

  - name: Fetch Meteor release
    get_url:
      url: "{{ meteor_url }}"
      dest: "{{ meteor_install_tmpdir }}/meteor-{{ __meteor_release }}.tar.gz"
      owner: "{{ meteor_user }}"
      group: "{{ meteor_group }}"

  - name: Remove previous Meteor install
    file:
      path: "{{ meteor_home }}/.meteor"
      state: absent

  - name: Extract the archive
    unarchive:
      src: "{{ meteor_install_tmpdir }}/meteor-{{ __meteor_release }}.tar.gz"
      dest: "{{ meteor_home }}"
      remote_src: yes
      owner: "{{ meteor_user }}"
      group: "{{ meteor_group }}"

  - name: Remove Meteor temp dir
    file:
      path: "{{ meteor_install_tmpdir }}"
      state: absent

  when: not __meteor_stat.stat.exists or __meteor_current_version is version(__meteor_adjusted_release, "!=")

- name: Ensure meteor is symlinked
  file:
    src: "{{ meteor_home }}/.meteor/meteor"
    dest: /usr/local/bin/meteor
    state: link
    owner: root
    group: root
